scale_y_continuous(
labels = scales::number_format(accuracy = 0.01))
pltTF
pltTF <- pltTF + theme(strip.text = element_text(face = "bold"))
pltTF
pltTF<-ggplot(data,aes(x=wpplot,y=mean), group=oddballtype)+
geom_line(aes(color=oddballtype), size=1) +
geom_point(aes(color=oddballtype), size=2) +
geom_ribbon(aes(ymin=mean-ci, ymax=mean+ci, fill=oddballtype), alpha=0.2, show.legend = FALSE, inherit.aes=TRUE)+
#geom_errorbar(aes(ymin=mean-se, ymax=mean+se,color=oddballtype), alpha=0.5)+
theme_classic()+
facet_grid(transition~direction, scales='free_x',
labeller=labeller(transition = as_labeller(transition.labs)))+
theme(strip.background = element_blank())+
theme(text=element_text(size=15))+#25))+
xlab('Lag') +
ylab('Conditional Response Probability')+
scale_color_manual(values=c('violetred2','turquoise2'),
labels=c('Emotional','Perceptual'), name='Oddball List Type', aesthetics=c('colour','fill'))+
scale_y_continuous(
labels = scales::number_format(accuracy = 0.01))
pltTF
pltTF <- pltTF +
annotate("text", x = Inf, y = Inf, hjust = 1, vjust = 1,
label = expression(bold("Transition from oddballs")), parse = TRUE,
color = "black", size = 5)
pltTF
# Can easily do a correlation on a subject by subject basis  ?? ¿¿
em1_corr <- as.data.frame(subset(data.plt4.jitter, list_type == 'emotional' & item =='m1' & oddvctrl=='oddball')) #raw recall of E-1 items
setwd("/Users/albaperis/OneDrive - UAM/PhDUPM_/Von Restroff WP3/Paper_github/Odd_SOA_CRP_Code_Reviewed/PerisYague2023/Raw_Results")
data<-read.csv('recall_probability_R.csv')
data$recprob <- as.numeric(data$recprob)
data$subject <- as.factor(data$subject)
data$encpos <- as.factor(data$encpos)
data$list_type <- as.factor(data$list_type)
data$item <- as.factor(data$item)
data$oddvctrl <- as.factor(data$oddvctrl)
data <- drop_na(data)
data <- droplevels(data)
# Figure S1a
#summarize data for plot
data.plt <- data %>%
group_by(item,list_type,encpos) %>%
get_summary_stats(recprob,type='mean_ci')
#Let's visualize it
#Plot oddballs vs. controls
data.plt3 <- data %>%
group_by(item,list_type) %>%
get_summary_stats(recprob,type='mean_ci')
data.plt3 <- data.plt3[ which(data.plt3$item=='control'| data.plt3$item=='oddball'), ]
data.plt3 <-droplevels(data.plt3)
data.plt3.jitter <- data %>%
group_by(item,list_type,subject) %>%
get_summary_stats(recprob, type= 'mean_ci')
data.plt3.jitter <- data.plt3.jitter[which(data.plt3.jitter$item == 'control' | data.plt3.jitter$item == 'oddball'),]
plot3<-ggplot(data.plt3, aes(fill=list_type, x=item, y=mean))+
geom_bar(position='dodge', stat='identity')+
geom_errorbar(aes(x=item, ymin=mean-ci, ymax=mean+ci), width=0.4, color='wheat4',size=0.5,
position=position_dodge(0.9), stat='identity')+
geom_jitter(data=data.plt3.jitter, aes(color=list_type,x=item, y=mean), position=position_jitterdodge(dodge.width = 0.9),show.legend = FALSE, alpha=0.2)+
guides(col=FALSE)+
scale_color_manual(values=c('orchid','deepskyblue'))+
scale_fill_manual(values=c('thistle1','lightblue1'),labels=c('Emotional', 'Perceptual'), name= 'List type')+
scale_x_discrete(labels=c('Control','Oddball'))+
labs(x='Item type', y='Recall probability')+
theme_classic()+
theme(strip.background=element_blank(), text=element_text(size=17))
plot3
# Run an ANOVA
data.plt3.jitter <-as.data.frame(data.plt3.jitter)
data.plt3.jitter$subject <- as.factor(data.plt3.jitter$subject)
data.plt3.jitter$list_type <- as.factor(data.plt3.jitter$list_type)
data.plt3.jitter$item <- as.factor(data.plt3.jitter$item)
data.plt3.jitter$mean <- as.numeric(data.plt3.jitter$mean)
# check for normality
plt3.QQ<-ggqqplot(data.plt3.jitter,'mean',ggtheme=theme_bw())+
facet_grid(list_type~item, labeller='label_both')
data.plt3.jitter %>% levene_test(mean ~ list_type*item)
plt3_aov<-anova_test(data=data.plt3.jitter, dv=mean, wid=subject,
within=c(list_type,item),
effect.size='pes')
get_anova_table(plt3_aov)
# post-hoc test for item type
data.plt3.jitter <- droplevels(data.plt3.jitter)
data.plt3.jitter %>%
group_by(item,subject) %>%
get_summary_stats(mean, type= 'mean_ci') %>%
pairwise_t_test(mean~item, paired=TRUE, p.adjust.method='fdr')
data.plt3.jitter %>%
group_by(item,subject) %>%
get_summary_stats(mean, type= 'mean_ci') %>%
cohens_d(mean~item, paired=TRUE)
#To calculate power of our oddball vs control effects:
data.plt3.jitter %>%
group_by(item,list_type) %>%
get_summary_stats(mean, type= 'mean_sd')
#Find how our data is correlated for G*power
x <- data.plt3.jitter[ which(data.plt3.jitter$item =='control'), ] # control items
y <- data.plt3.jitter[ which(data.plt3.jitter$item =='oddball'), ] # oddballs
cor(x$mean,y$mean, method=c('pearson')) #0.227
#post-hoc for list type
data.plt3.jitter %>%
group_by(list_type,subject) %>%
get_summary_stats(mean, type= 'mean_ci') %>%
pairwise_t_test(mean~list_type, paired=TRUE, p.adjust.method='fdr')
data.plt3.jitter %>%
group_by(list_type,subject) %>%
get_summary_stats(mean, type= 'mean_ci') %>%
cohens_d(mean~list_type, paired=TRUE)
# Table S1, Fig. S1B, Plot items to test retrograde amnesic effect
data.plt4 <- data %>%
group_by(item,list_type) %>%
get_summary_stats(recprob,type='mean_ci')
data.plt4 <- data.plt4[ which(data.plt4$item =='controlm2'| data.plt4$item =='controlm1' | data.plt4$item == 'controlp1'
|data.plt4$item == 'oddballm2' | data.plt4$item == 'oddballm1' | data.plt4$item == 'oddballp1'), ]
data.plt4 <- droplevels(data.plt4)
data.plt4.jitter <- data %>%
group_by(item,list_type,subject,oddvctrl) %>%
get_summary_stats(recprob, type= 'mean_ci')
data.plt4.jitter <- data.plt4.jitter[ which(data.plt4.jitter$item =='controlm2'| data.plt4.jitter$item =='controlm1' |
data.plt4.jitter$item == 'controlp1'|data.plt4.jitter$item == 'oddballm2' |
data.plt4.jitter$item == 'oddballm1' | data.plt4.jitter$item == 'oddballp1'), ]
plot4<-ggplot(data.plt4, aes(fill=list_type, x=item, y=mean))+
geom_bar(position='dodge', stat='identity')+
geom_errorbar(aes(x=item, ymin=mean-ci, ymax=mean+ci), width=0.4, color='wheat4',size=0.5,
position=position_dodge(0.9), stat='identity')+
geom_jitter(data=data.plt4.jitter, aes(color=list_type,x=item, y=mean), position=position_jitterdodge(dodge.width = 0.9),show.legend = FALSE, alpha=0.2)+
guides(col=FALSE)+
scale_color_manual(values=c('orchid','deepskyblue'))+
scale_fill_manual(values=c('thistle1','lightblue1'),labels=c('Emotional', 'Perceptual'), name= 'List type')+
scale_x_discrete(labels=c('Ctrl-1','Ctrl-2', 'Ctrl+1', 'Odd-1', 'Odd-2', 'Odd+1'))+
labs(x='Item type', y='Recall probability')+
theme_classic()+
theme(strip.background=element_blank(), text=element_text(size=17))
plot4
data.plt4.jitter <- droplevels(data.plt4.jitter)
data.plt4.jitter$item <- as.character(data.plt4.jitter$item)
data.plt4.jitter["item"][data.plt4.jitter["item"] == "controlm1"] <- "m1"
data.plt4.jitter["item"][data.plt4.jitter["item"] == "controlm2"] <- "m2"
data.plt4.jitter["item"][data.plt4.jitter["item"] == "controlp1"] <- "p1"
data.plt4.jitter["item"][data.plt4.jitter["item"] == "oddballm2"] <- "m2"
data.plt4.jitter["item"][data.plt4.jitter["item"] == "oddballm1"] <- "m1"
data.plt4.jitter["item"][data.plt4.jitter["item"] == "oddballp1"] <- "p1"
data.plt4.jitter$item <- as.factor(data.plt4.jitter$item)
data.plt4.jitter$oddvctrl <- as.factor(data.plt4.jitter$oddvctrl)
plt4.QQ<-ggqqplot(data.plt4.jitter,'mean',ggtheme=theme_bw())+
facet_grid(list_type~item*oddvctrl, labeller='label_both')
data.plt4.jitter %>% levene_test(mean ~ list_type*item*oddvctrl)
plt4_aov <- anova_test(mean ~ list_type*item*oddvctrl + Error(subject/(list_type*item*oddvctrl)), data=data.plt4.jitter)
plt4_aov<-anova_test(
data=data.plt4.jitter,dv=mean,wid=subject,
within=c(list_type, oddvctrl,item), type=3, effect.size = 'pes'
)
get_anova_table(plt4_aov)
data.plt4.jitter %>%
group_by(list_type,subject) %>%
get_summary_stats(mean, type= 'mean_ci') %>%
pairwise_t_test(mean~list_type, paired=TRUE, p.adjust.method='fdr')
data.plt4.jitter %>%
group_by(list_type,subject) %>%
get_summary_stats(mean, type= 'mean_ci') %>%
cohens_d(mean~list_type, paired=TRUE)
# Group the data by encoding position
datajasp <-data %>%
group_by(subject,list_type,item) %>%
get_summary_stats(recprob,type='mean_ci')
#go to jasp
test.wide <- dcast(datajasp, subject ~  list_type + item, value.var = "mean", drop = FALSE)
path_out<- '/Raw_Results/'
#write.csv(test.wide, paste(path_out,'recallprobability_JASP.csv',sep = ''))
#####
View(data.plt4.jitter)
# Transitions from oddballs
setwd("/Users/albaperis/OneDrive - UAM/PhDUPM_/Von Restroff WP3/Paper_github/Odd_SOA_CRP_Code_Reviewed/PerisYague2023/Raw_Results")
TFCRP<-read.csv('ToFrom_CRP_R.csv')
TFCRP<-as.data.frame(TFCRP)
#head(TFCRP) #to show you what my raw data looks like
TFplot<-TFCRP %>%
group_by(oddballtype,wordposition, direction,transition) %>%
get_summary_stats(CRP,type='mean_ci')
wpplot<-numeric(0)
for (rows in 1:nrow(TFplot)){
if (TFplot$direction[rows] == "Backwards") {
wpplot[rows]<-(TFplot$wordposition[rows])*-1
}
else {wpplot[rows]<-(TFplot$wordposition[rows])
}
}
invisible(as.data.frame(wpplot))
TFplot$wpplot<-wpplot
TFplot$transition<-factor(TFplot$transition, levels=c('to','from'))
transition.labs<- c('Transition TO the oddball', 'Transition FROM the oddball')
names(transition.labs)<-c('to', 'from')
TFplot <- filter(TFplot, transition == 'from')
TFplot <- droplevels(TFplot)
# Transitions from controls
setwd("/Users/albaperis/OneDrive - UAM/PhDUPM_/Von Restroff WP3/Paper_github/Odd_SOA_CRP_Code_Reviewed/PerisYague2023/Raw_Results")
TFCRPctrl<-read.csv('control_ToFrom_CRP_R.csv')
TFCRPctrl<-as.data.frame(TFCRPctrl)
#head(TFCRP) #to show you what my raw data looks like
ctrlTFplot<-TFCRPctrl %>%
group_by(oddballtype,wordposition, direction,transition) %>%
get_summary_stats(CRP,type='mean_ci')
ctrlwpplot<-numeric(0)
for (rows in 1:nrow(ctrlTFplot)){
if (ctrlTFplot$direction[rows] == "Backwards") {
ctrlwpplot[rows]<-(ctrlTFplot$wordposition[rows])*-1
}
else {ctrlwpplot[rows]<-(ctrlTFplot$wordposition[rows])
}
}
invisible(as.data.frame(ctrlwpplot))
ctrlTFplot$ctrlwpplot<-ctrlwpplot
ctrlTFplot$transition<-factor(ctrlTFplot$transition, levels=c('to','from'))
ctrlTFplot <- filter(ctrlTFplot, transition == 'from')
ctrlTFplot <- droplevels(ctrlTFplot)
# Rename the from to oddball / control to concatenate the lists for plotting
TFplot$transition <- as.character(TFplot$transition)
TFplot["transition"][TFplot["transition"] == "from"] <- "oddball"
TFplot$transition <- as.factor(TFplot$transition)
ctrlTFplot$transition <- as.character(ctrlTFplot$transition)
ctrlTFplot["transition"][ctrlTFplot["transition"] == "from"] <- "control"
names(ctrlTFplot)[names(ctrlTFplot) == "ctrlwpplot"] <- "wpplot"
ctrlTFplot$transition <- as.factor(ctrlTFplot$transition)
data <- rbind(TFplot, ctrlTFplot)
transition.labs<- c('Transition from oddballs', 'Transition from controls')
names(transition.labs)<-c('oddball', 'control')
pltTF<-ggplot(data,aes(x=wpplot,y=mean), group=oddballtype)+
geom_line(aes(color=oddballtype), size=1) +
geom_point(aes(color=oddballtype), size=2) +
geom_ribbon(aes(ymin=mean-ci, ymax=mean+ci, fill=oddballtype), alpha=0.2, show.legend = FALSE, inherit.aes=TRUE)+
#geom_errorbar(aes(ymin=mean-se, ymax=mean+se,color=oddballtype), alpha=0.5)+
theme_classic()+
facet_grid(transition~direction, scales='free_x',
labeller=labeller(transition = as_labeller(transition.labs)))+
theme(strip.background = element_blank())+
theme(text=element_text(size=15))+#25))+
xlab('Lag') +
ylab('Conditional Response Probability')+
scale_color_manual(values=c('violetred2','turquoise2'),
labels=c('Emotional','Perceptual'), name='Oddball List Type', aesthetics=c('colour','fill'))+
scale_y_continuous(
labels = scales::number_format(accuracy = 0.01))
pltTF
#Compare the averaged (+- 5 lags) transitions to and from the oddballs vs. the control items
CRP_odd_v_ctrl<-read.csv('CRP_avgd_oddballvcontrol.csv')
CRP_odd_v_ctrl<-as.data.frame(CRP_odd_v_ctrl)
CRP_odd_v_ctrl$subject<-as.factor(CRP_odd_v_ctrl$subject)
CRP_odd_v_ctrl$oddballtype<-as.factor(CRP_odd_v_ctrl$oddballtype)
CRP_odd_v_ctrl$transition<-as.factor(CRP_odd_v_ctrl$transition)
CRP_odd_v_ctrl$direction<-as.factor(CRP_odd_v_ctrl$direction)
CRP_odd_v_ctrl$item_type<-as.factor(CRP_odd_v_ctrl$item_type)
transition.labs<- c('Transitions from the target items')
names(transition.labs)<-c('from')
CRP_odd_v_ctrl <- filter(CRP_odd_v_ctrl, transition == 'from')
CRP_odd_v_ctrl <- droplevels(CRP_odd_v_ctrl)
CRP_odd_v_ctrl$CRPmean <- as.numeric(CRP_odd_v_ctrl$CRPmean)
CRP_odd_v_ctrl$direction <- as.factor(CRP_odd_v_ctrl$direction)
CRP_odd_v_ctrl$oddballtype <- as.factor(CRP_odd_v_ctrl$oddballtype)
CRP_odd_v_ctrl$item_type <- as.factor(CRP_odd_v_ctrl$item_type)
plt <- CRP_odd_v_ctrl %>%
group_by(oddballtype, item_type, transition, direction) %>%
get_summary_stats(CRPmean, type = 'mean_ci')
pltTF.collapsed<-ggplot(plt,aes(x=direction,y=mean, group=oddballtype, shape= item_type, color = oddballtype,  ymin=mean-ci, ymax=mean+ci))+
geom_pointrange(position=position_dodge2(width=0.5), size=1)+
theme_classic()+
facet_grid(~transition, scales='free_x',
labeller=labeller(transition = as_labeller(transition.labs)))+
theme(text=element_text(size=15))+#25))+
theme(strip.background = element_blank())+
xlab('Collapsed Lag (± 5 lags)') +
ylab('Conditional Response Probability')+
scale_color_manual(values=c('violetred2','turquoise2'),
labels=c('Emotional','Perceptual'), name='Oddball List Type')+
scale_shape_manual(name = "Item Type",
labels = c("Control", "Oddball"),
values=c(16,17))
pltTF.collapsed
# Run statistics
fwrd <- CRP_odd_v_ctrl
fwrd$CRPmean <- as.numeric(fwrd$CRPmean)
# only select forward transitions as this is what we're interested in
fwrd <- filter(fwrd, direction == 'forwards')
#
fwrd$direction <- as.factor(fwrd$direction)
fwrd$oddballtype <- as.factor(fwrd$oddballtype)
fwrd$item_type <- as.factor(fwrd$item_type)
fwrd <- droplevels(fwrd)
#ggqqplot(fwrd,'CRPmean',ggtheme=theme_bw())+
#facet_grid(oddballtype~item_type, labeller='label_both')
transitions_aov<-anova_test(data=fwrd, dv=CRPmean, wid=subject,
within=c(oddballtype,item_type), effect.size = 'pes'
)
get_anova_table(transitions_aov)
fwrd %>%
group_by(oddballtype) %>%
pairwise_t_test(CRPmean~item_type, paired=TRUE, p.adjust.method='fdr')
fwrd %>%
group_by(oddballtype) %>%
cohens_d(CRPmean~item_type, paired=TRUE)
# For completion check backward transitions
bkwrd <- CRP_odd_v_ctrl
bkwrd$CRPmean <- as.numeric(bkwrd$CRPmean)
# only select forward transitions as this is what we're interested in
bkwrd <- filter(bkwrd, direction == 'backwards')
#
bkwrd$direction <- as.factor(bkwrd$direction)
bkwrd$oddballtype <- as.factor(bkwrd$oddballtype)
bkwrd$item_type <- as.factor(bkwrd$item_type)
bkwrd <- droplevels(bkwrd)
#ggqqplot(bkwrd,'CRPmean',ggtheme=theme_bw())+
# facet_grid(oddballtype~item_type, labeller='label_both')
bckwrd_transitions_aov<-anova_test(data=bkwrd, dv=CRPmean, wid=subject,
within=c(oddballtype,item_type), effect.size = 'pes'
)
get_anova_table(bckwrd_transitions_aov)
bkwrd %>%
group_by(oddballtype) %>%
pairwise_t_test(CRPmean~item_type, paired=TRUE, p.adjust.method='fdr')
bkwrd %>%
group_by(oddballtype) %>%
cohens_d(CRPmean~item_type, paired=TRUE)
View(CRP_odd_v_ctrl)
# Can easily do a correlation on a subject by subject basis  ?? ¿¿
em1_corr <- as.data.frame(subset(data.plt4.jitter, list_type == 'emotional' & item =='m1' & oddvctrl=='oddball')) #raw recall of E-1 items
lag_corr <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='forwards' & item_type == 'oddball'))
View(lag_corr)
# test on 12-12-23
lag_p1 <- lag_corr
levels(CRP_odd_v_ctrl$oddballtype)
levels(CRP_odd_v_ctrl$transition)
levels(CRP_odd_v_ctrl$direction)
levels(CRP_odd_v_ctrl$item_type)
# Can easily do a correlation on a subject by subject basis  ?? ¿¿
em1_corr <- as.data.frame(subset(data.plt4.jitter, list_type == 'emotional' & item =='m1' & oddvctrl=='oddball')) #raw recall of E-1 items
lag_corr <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='forwards' & item_type == 'oddball'))
# test on 12-12-23
#lag_p1 <- lag_corr
#lag_m1 <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='backwards' & item_type == 'oddball'))
corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRPmean))
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
ylab('Lag +1 transitions from E Odd')+
xlab('E-1 Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
pltTF
View(TFCRP)
levels(TFCRP$direction)
TFCRP$subject <- as.factor(TFCRP$subject)
TFCRP$oddballtype <- as.factor(TFCRP$oddballtype)
TFCRP$transition <- as.factor(TFCRP$transition)
TFCRP$direction <- as.factor(TFCRP$direction)
TFCRP$wordposition <- as.factor(TFCRP$wordposition)
TFCRP$CRP <- as.numeric(TFCRP$CRP)
levels(TFCRP$direction)
lag_corr <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Forwards' & wordposition == '1'))
View(lag_corr)
corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRP))
View(corrplt)
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
ylab('Lag +1 transitions from E Odd')+
xlab('E-1 Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
corrplt
lag_m1 <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='Backwards' & wordposition == '1'))
lag_m1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Backwards' & wordposition == '1'))
View(lag_m1)
lag_corr <- lag_p1$CRP - lag_m1$CRP
View(lag_p1)
0.425 - 1
lag_corr$CRPmean <- lag_p1$CRP - lag_m1$CRP
corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRPmean))
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
ylab('Lag +1 transitions from E Odd')+
xlab('E-1 Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
#ylab('Lag +1 transitions from E Odd')+
ylab('(Lag +1 - lag - 1) transitions from E Odd')+
xlab('E-1 Probability of Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
corrplt
# Can easily do a correlation on a subject by subject basis  ?? ¿¿
em1_corr <- as.data.frame(subset(data.plt4.jitter, list_type == 'emotional' & item =='m1' & oddvctrl=='oddball')) #raw recall of E-1 items
lag_corr <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='forwards' & item_type == 'oddball'))
corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRP))
# 12-12-23: For review, added the difference between lag -1 and lag + 1
TFCRP$subject <- as.factor(TFCRP$subject)
TFCRP$oddballtype <- as.factor(TFCRP$oddballtype)
TFCRP$transition <- as.factor(TFCRP$transition)
TFCRP$direction <- as.factor(TFCRP$direction)
TFCRP$wordposition <- as.factor(TFCRP$wordposition)
TFCRP$CRP <- as.numeric(TFCRP$CRP)
#lag_p1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Forwards' & wordposition == '1'))
#lag_m1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Backwards' & wordposition == '1'))
#lag_corr$CRPmean <- lag_p1$CRP - lag_m1$CRP
#corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRPmean))
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
#ylab('Lag +1 transitions from E Odd')+
ylab('(Lag +1 - lag - 1) transitions from E Odd')+
xlab('E-1 Probability of Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
#ylab('Lag +1 transitions from E Odd')+
ylab('Lag 1-5 transitions from E Odd')+
xlab('E-1 Probability of Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
View(lag_p1)
# Can easily do a correlation on a subject by subject basis  ?? ¿¿
em1_corr <- as.data.frame(subset(data.plt4.jitter, list_type == 'emotional' & item =='m1' & oddvctrl=='oddball')) #raw recall of E-1 items
#lag_corr <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='forwards' & item_type == 'oddball'))
#corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRP))
# 12-12-23: For review, added lag + 1
lag_p1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Forwards' & wordposition == '1'))
corrplot<-as.data.frame(cbind(em1_corr$mean,lag_p1$CRPmean))
# 12-12-23: For review, added the difference between lag -1 and lag + 1
TFCRP$subject <- as.factor(TFCRP$subject)
TFCRP$oddballtype <- as.factor(TFCRP$oddballtype)
TFCRP$transition <- as.factor(TFCRP$transition)
TFCRP$direction <- as.factor(TFCRP$direction)
TFCRP$wordposition <- as.factor(TFCRP$wordposition)
TFCRP$CRP <- as.numeric(TFCRP$CRP)
lag_p1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Forwards' & wordposition == '1'))
#lag_m1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Backwards' & wordposition == '1'))
#lag_corr$CRPmean <- lag_p1$CRP - lag_m1$CRP
#corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRPmean))
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
#ylab('Lag +1 transitions from E Odd')+
ylab('Lag +1 transitions from E Odd')+
xlab('E-1 Probability of Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
# Can easily do a correlation on a subject by subject basis  ?? ¿¿
em1_corr <- as.data.frame(subset(data.plt4.jitter, list_type == 'emotional' & item =='m1' & oddvctrl=='oddball')) #raw recall of E-1 items
#lag_corr <- as.data.frame(subset(CRP_odd_v_ctrl, oddballtype=='E' & transition == 'from' & direction=='forwards' & item_type == 'oddball'))
#corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRP))
# 12-12-23: For review, added lag + 1
lag_p1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Forwards' & wordposition == '1'))
corrplot<-as.data.frame(cbind(em1_corr$mean,lag_p1$CRP))
# 12-12-23: For review, added the difference between lag -1 and lag + 1
TFCRP$subject <- as.factor(TFCRP$subject)
TFCRP$oddballtype <- as.factor(TFCRP$oddballtype)
TFCRP$transition <- as.factor(TFCRP$transition)
TFCRP$direction <- as.factor(TFCRP$direction)
TFCRP$wordposition <- as.factor(TFCRP$wordposition)
TFCRP$CRP <- as.numeric(TFCRP$CRP)
lag_p1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Forwards' & wordposition == '1'))
#lag_m1 <- as.data.frame(subset(TFCRP, oddballtype=='E' & transition == 'from' & direction=='Backwards' & wordposition == '1'))
#lag_corr$CRPmean <- lag_p1$CRP - lag_m1$CRP
#corrplot<-as.data.frame(cbind(em1_corr$mean,lag_corr$CRPmean))
corrplt<-ggplot(corrplot, aes(x=V1, y=V2))+
geom_point(shape=18, color='darksalmon')+
geom_smooth(method=lm, se=FALSE, color='lightskyblue2')+
#ggtitle('Correlation of E-1 normalized recall and transitions from E Odd (lag +1)')+
#ylab('Lag +1 transitions from E Odd')+
ylab('Lag +1 transitions from E Odd')+
xlab('E-1 Probability of Recall')+
theme_classic()+
theme(strip.background = element_blank())+
theme(text=element_text(size=17))
corrplt
cor.test(corrplot$V1, corrplot$V2,  method = "spearman", use = "complete.obs")
corrplt
pltTF.collapsed
